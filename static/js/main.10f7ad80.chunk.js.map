{"version":3,"sources":["components/Filters/SortBy/SortByArrData.js","components/Filters/SortBy/SortBy.jsx","components/Filters/Pagination/Pagination.jsx","components/Filters/ReleaseYear/ReleasedYearArrData.js","components/Filters/ReleaseYear/ReleaseYear.jsx","components/Filters/Genres/GenresArrayData.js","components/Filters/Genres/Genres.jsx","components/Filters/Filters.jsx","api/api.js","components/HOC/AppContextHOC.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/User/UserMenu.jsx","components/Header/Header.jsx","components/Movies/MovieList/MovieItem/MovieItem.jsx","components/Movies/MovieList/MovieList.jsx","components/Movies/MoviesHOC.jsx","components/App.jsx","index.js"],"names":["options","label","value","SortBy","this","props","sort_by","onChangeFilters","className","htmlFor","id","name","onChange","map","option","key","React","PureComponent","Pagination","page","onChangePagination","total_pages","type","disabled","onClick","Component","ReleaseYear","primary_release_year","year","GenresArr","Genres","gen","onChangeGenre","Filters","filters","with_genres","API_URL","API_KEY_3","fetchAPI","url","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","AppContext","Consumer","context","AppContextHOC","state","username","password","errors","submitting","event","target","setState","prevState","handleBlur","validFields","Object","keys","length","onSubmit","a","method","mode","headers","body","JSON","stringify","request_token","result","session","getSessionId","session_id","account","getUser","base","status_message","onLogin","e","preventDefault","getClassForInput","classNames","placeholder","required","onBlur","Login","toggleModal","showModal","Modal","isOpen","toggle","ModalBody","useState","dropdownOpen","setDropdownOpen","Dropdown","DropdownToggle","tag","data-toggle","aria-expanded","src","user","avatar","gravatar","hash","alt","DropdownMenu","right","onLogOut","Header","MovieItem","movie","imagePath","backdrop_path","poster_path","title","vote_average","MovieList","movies","defaultProps","MoviesContainerHOC","getMovies","queryStringParams","api_key","language","link","queryString","results","prevProps","cookies","Cookies","createContext","App","set","path","maxAge","remove","newFilters","newGenres","includes","filter","el","get","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10f7ad80.chunk.js","sourcesContent":["export const options = [\r\n    {\r\n        label: \"Пополярные по убыванию\",\r\n        value: \"popularity.asc\"\r\n    },\r\n    {\r\n        label: \"Пополярные по возростанию\",\r\n        value: \"popularity.desc\"\r\n    },\r\n    {\r\n        label: \"Рейтинг по убыванию\",\r\n        value: \"vote_average.asc\"\r\n    },\r\n    {\r\n        label: \"Рейтинг по возростанию\",\r\n        value: \"vote_average.desc\"\r\n    },\r\n]","import React from 'react';\r\nimport {options} from './SortByArrData'\r\n\r\n\r\nclass SortBy extends React.PureComponent {\r\n    render() {\r\n        const {sort_by, onChangeFilters} = this.props\r\n        return (\r\n            <div>\r\n                <div className='form-group'>\r\n                    <label htmlFor=\"sort_by\">Сорировать по:</label>\r\n                    <select className='form-control' id=\"sort_by\" name={\"sort_by\"}\r\n                            value={sort_by}\r\n                            onChange={onChangeFilters}>\r\n\r\n                        {options.map(option => {\r\n                            return <option key={option.value} value={option.value}>{option.label}</option>\r\n                        })}\r\n\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortBy;","import React from 'react';\r\n\r\nclass Pagination extends React.Component {\r\n    render() {\r\n        const {page, onChangePagination, total_pages} = this.props\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <button type=\"button\" className=\"btn btn-secondary m-2\" disabled={page === 1}\r\n                        onClick={() => {onChangePagination(page - 1)}}>Назад</button>\r\n                <label>{page} из {total_pages}</label>\r\n                <button type=\"button\" className=\"btn btn-secondary m-2\" disabled={page === total_pages}\r\n                        onClick={() => {onChangePagination(page + 1)}}>Вперед</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;","export const options = [\r\n    {\r\n        label: \"2020\",\r\n        value: \"2020\"\r\n    },\r\n    {\r\n        label: \"2019\",\r\n        value: \"2019\"\r\n    },\r\n    {\r\n        label: \"2018\",\r\n        value: \"2018\"\r\n    },\r\n    {\r\n        label: \"2017\",\r\n        value: \"2017\"\r\n    },\r\n    {\r\n        label: \"2016\",\r\n        value: \"2016\"\r\n    },\r\n]","import React from 'react';\r\nimport {options} from './ReleasedYearArrData';\r\n\r\n\r\nexport default class ReleaseYear extends React.PureComponent {\r\n    render() {\r\n        const {primary_release_year, onChangeFilters} = this.props;\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>По дате выпуска:</label>\r\n                <select name=\"primary_release_year\" className=\"form-control\" value={primary_release_year}\r\n                        onChange={onChangeFilters}>\r\n                    {options.map(year => {\r\n                       return <option key={year.value} value={year.value}>{year.label}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","export const GenresArr =  [\r\n    {\r\n        \"id\": 28,\r\n        \"name\": \"боевик\"\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"name\": \"приключения\"\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"name\": \"мультфильм\"\r\n    },\r\n    {\r\n        \"id\": 35,\r\n        \"name\": \"комедия\"\r\n    },\r\n    {\r\n        \"id\": 80,\r\n        \"name\": \"криминал\"\r\n    },\r\n    {\r\n        \"id\": 99,\r\n        \"name\": \"документальный\"\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"name\": \"драма\"\r\n    },\r\n    {\r\n        \"id\": 10751,\r\n        \"name\": \"семейный\"\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"name\": \"фэнтези\"\r\n    },\r\n    {\r\n        \"id\": 36,\r\n        \"name\": \"история\"\r\n    },\r\n    {\r\n        \"id\": 27,\r\n        \"name\": \"ужасы\"\r\n    },\r\n    {\r\n        \"id\": 10402,\r\n        \"name\": \"музыка\"\r\n    },\r\n    {\r\n        \"id\": 9648,\r\n        \"name\": \"детектив\"\r\n    },\r\n    {\r\n        \"id\": 10749,\r\n        \"name\": \"мелодрама\"\r\n    },\r\n    {\r\n        \"id\": 878,\r\n        \"name\": \"фантастика\"\r\n    },\r\n    {\r\n        \"id\": 10770,\r\n        \"name\": \"телевизионный фильм\"\r\n    },\r\n    {\r\n        \"id\": 53,\r\n        \"name\": \"триллер\"\r\n    },\r\n    {\r\n        \"id\": 10752,\r\n        \"name\": \"военный\"\r\n    },\r\n    {\r\n        \"id\": 37,\r\n        \"name\": \"вестерн\"\r\n    }\r\n];\r\n\r\n","import React from 'react';\r\nimport {GenresArr} from './GenresArrayData'\r\n\r\nexport default class Genres extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {GenresArr.map(gen => {\r\n                    return <div key={gen.id}>\r\n                        <input type=\"checkbox\" className=\"m-2\" name=\"with_genres\"\r\n                               value={gen.id}\r\n                               onChange={this.props.onChangeGenre}/>\r\n                        <label>{gen.name}</label>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport SortBy from \"./SortBy/SortBy\";\r\nimport Pagination from \"./Pagination/Pagination\";\r\nimport ReleaseYear from \"./ReleaseYear/ReleaseYear\";\r\nimport Genres from \"./Genres/Genres\";\r\n\r\nexport default class Filters extends React.Component {\r\n    render() {\r\n        const {\r\n            filters: {sort_by, primary_release_year, with_genres},\r\n            onChangeFilters,\r\n            onChangePagination,\r\n            page,\r\n            total_pages,\r\n            onChangeGenre\r\n        } = this.props;\r\n        return (\r\n            <form className='mb-3'>\r\n                <SortBy sort_by={sort_by} onChangeFilters={onChangeFilters}/>\r\n                <ReleaseYear primary_release_year={primary_release_year} onChangeFilters={onChangeFilters}  />\r\n                <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} onChangeGenre={onChangeGenre} />\r\n                <Pagination page={page} total_pages={total_pages} onChangePagination={onChangePagination}/>\r\n            </form>\r\n        )\r\n    }\r\n}","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"5a3283303e8b71660db01b96fb67c038\";\r\n\r\nexport const API_KEY_4 = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YTMyODMzMDNlOGI3MTY2MGRiMDFiOTZmYjY3YzAzOCIsInN1YiI6IjVmZjQyZWFhMmNkZTk4MDA0MDcxYjk5MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Uqx7uFjeSbLTyLxkAih6H85u5fr2zAo7DGj63bnu7s4\"\r\n\r\nexport const fetchAPI = (url, options = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, options).then(response => {\r\n            if (response.status < 400) {\r\n                return response.json()\r\n            } else {\r\n                throw response;\r\n            }\r\n        }).then(data => resolve(data)).catch(response => response.json().then(error => reject(error)))\r\n    })\r\n}\r\n","import React from 'react';\r\nimport {AppContext} from \"../App\";\r\n\r\nexport default Component => class AppContextHOC extends React.Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {context => <Component {...context} {...this.props} />}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './Login.css'\r\nimport {API_KEY_3, API_URL, fetchAPI} from \"../../../api/api\";\r\nimport classNames from 'classnames';\r\nimport AppContextHOC from '../../HOC/AppContextHOC'\r\n\r\nclass LoginForm extends React.PureComponent {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        errors: {},\r\n        submitting: false\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({\r\n            [name]: value,\r\n            errors: {\r\n                ...prevState.errors,\r\n                [name]: null,\r\n                base: null\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleBlur = event => {\r\n        const {name} = event.target;\r\n        const errors = this.validFields();\r\n        const error = errors[name]\r\n        if (Object.keys(errors).length > 0) {\r\n            this.setState(prevState => ({\r\n                errors: {\r\n                    ...prevState.errors,\r\n                    [name]: error,\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    validFields = () => {\r\n        const errors = {};\r\n        if (this.state.username === \"\") {\r\n            errors.username = \"Required\"\r\n        }\r\n        if (this.state.password.length < 5) {\r\n            errors.password = \"Required. Must be 5 characters or more\"\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        try {\r\n            this.setState({\r\n                submitting: true,\r\n            })\r\n\r\n            const data = await fetchAPI(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\r\n\r\n            const result = await fetchAPI(`${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    request_token: data.request_token\r\n                })\r\n            })\r\n\r\n            const session = await fetchAPI(`${API_URL}/authentication/session/new?api_key=${API_KEY_3}`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    request_token: result.request_token\r\n                })\r\n            });\r\n\r\n            this.props.getSessionId(session.session_id)\r\n\r\n            const account = await fetchAPI(`${API_URL}/account?api_key=${API_KEY_3}&session_id=${session.session_id}`);\r\n            this.setState({\r\n                submitting: false,\r\n            }, () => {\r\n                this.props.getUser(account);\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            this.setState({\r\n                submitting: false,\r\n                errors: {\r\n                    base: e.status_message\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onLogin = e => {\r\n        e.preventDefault();\r\n        const errors = this.validFields();\r\n        if (Object.keys(errors).length > 0) {\r\n            this.setState(prevState => ({\r\n                errors: {\r\n                    ...prevState.errors,\r\n                    ...errors,\r\n                }\r\n            }))\r\n        } else {\r\n            this.onSubmit()\r\n        }\r\n    }\r\n\r\n    getClassForInput = key => {\r\n        return classNames(\"form-control\", {\r\n            \"invalid\": this.state.errors[key]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {errors, username, password, submitting} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title text-center\">Sign In</h4>\r\n                                <form className=\"form-signin\">\r\n                                    <div className=\"form-label-group\">\r\n                                        <label htmlFor=\"inputName\">Login</label>\r\n                                        <input name=\"username\" value={username} type=\"text\" id=\"inputName\"\r\n                                               className={this.getClassForInput(\"username\")}\r\n                                               placeholder=\"shkaf4uk\" required\r\n                                               onChange={this.onChange} onBlur={this.handleBlur}/>\r\n                                    </div>\r\n                                    {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\r\n                                    <div className=\"form-label-group\">\r\n                                        <label htmlFor=\"inputPassword\">Password</label>\r\n                                        <input name=\"password\" value={password} type=\"password\" id=\"inputPassword\"\r\n                                               className={this.getClassForInput(\"password\")}\r\n                                               placeholder=\"1q2w3e\" required onChange={this.onChange}/>\r\n                                    </div>\r\n                                    {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                                    <div className=\"custom-control custom-checkbox mb-3\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\"/>\r\n                                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember\r\n                                            me</label>\r\n                                    </div>\r\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                                            type=\"submit\" onClick={this.onLogin} disabled={submitting}>Sign In\r\n                                    </button>\r\n                                    {errors.base && <div className=\"invalid-feedback text-center\">{errors.base}</div>}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppContextHOC(LoginForm)","import React from 'react';\r\nimport {Modal, ModalBody} from 'reactstrap';\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nclass Login extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showModal: false,\r\n        };\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(prevState => ({\r\n            showModal: !prevState.showModal\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-success\" type=\"button\" onClick={this.toggleModal}>Login</button>\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                    <ModalBody>\r\n                        <LoginForm />\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login","import React, {useState} from 'react';\r\nimport {Dropdown, DropdownMenu, DropdownToggle} from 'reactstrap';\r\nimport AppContextHOC from \"../../HOC/AppContextHOC\";\r\nimport {fetchAPI, API_URL, API_KEY_3} from \"../../../api/api\";\r\n\r\nconst UserMenu = (props) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    const handleLogOut = () => {\r\n        fetchAPI(`${API_URL}/authentication/session?api_key=${API_KEY_3}`, {\r\n            method: \"DELETE\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                session_id: props.session_id\r\n            })\r\n        }).then(() => {\r\n            props.onLogOut();\r\n            toggle();\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n            <DropdownToggle\r\n                tag=\"span\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}>\r\n                <img className=\"rounded-circle\"\r\n                     src={`https://www.gravatar.com/avatar/${props.user.avatar.gravatar.hash}?s=40`} alt=\"\"/>\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n                <div onClick={handleLogOut}>Log out</div>\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default AppContextHOC(UserMenu);\r\n","import React from 'react';\r\nimport Login from \"./Login/Login\";\r\nimport UserMenu from './User/UserMenu';\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        const {user} = this.props\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-primary\">\r\n                <div className=\"container\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\">Home</a>\r\n                        </li>\r\n                    </ul>\r\n                    {user ? <UserMenu /> : <Login />}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst urlEmptyImg = \"https://d1csarkz8obe9u.cloudfront.net/posterpreviews/movie-poster-template-for-free-design-a28c2f452f5c988ef92d66875b784209_screen.jpg?ts=1561393990\";\r\n\r\nclass MovieItem extends React.Component {\r\n    render() {\r\n        const data = this.props.movie;\r\n        const imagePath = data.backdrop_path || data.poster_path\r\n        return (\r\n            <div className=\"card\">\r\n                <img className=\"card-img-top card-img-height\"\r\n                     src={imagePath ? `https://image.tmdb.org/t/p/w500${imagePath}` : urlEmptyImg} alt=\"\"/>\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{data.title}</h6>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <p className=\"mb-0\">Рейтинг: {data.vote_average}</p>\r\n                        <button type=\"button\" className=\"btn btn-success\">Will Watch</button>\r\n                    </div>\r\n                    <button type=\"button\">Watched</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport MovieItem from \"./MovieItem/MovieItem\";\r\nimport PropTypes from 'prop-types';\r\nimport MoviesContainerHOC from \"../MoviesHOC\";\r\n\r\nconst MovieList = ({movies}) => {\r\n    return <div className='row'>\r\n            {movies.map(movie => {\r\n                return <div className=\"col-6 p-4\" key={movie.id}>\r\n                    <div className={'row'}>\r\n                        <MovieItem movie={movie}/>\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n}\r\n\r\nMovieList.defaultProps = {\r\n    movies: []\r\n}\r\n\r\nMovieList.propTypes = {\r\n    movies: PropTypes.array\r\n}\r\n\r\nexport default MoviesContainerHOC(MovieList);\r\n","import React from \"react\";\r\nimport {API_KEY_3, API_URL} from \"../../api/api\";\r\nimport queryString from 'query-string'\r\n\r\nexport default (Component) => class MoviesHOC extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movies: [],\r\n        };\r\n    }\r\n\r\n    getMovies = (filters, page) => {\r\n        const {filters: {sort_by, primary_release_year, with_genres}} = this.props;\r\n        const queryStringParams = {\r\n            api_key: API_KEY_3,\r\n            language: \"ru-RU\",\r\n            sort_by,\r\n            page,\r\n            primary_release_year\r\n        }\r\n\r\n        if (with_genres.length > 0) {\r\n            queryStringParams.with_genres = with_genres\r\n        }\r\n\r\n        const link = `${API_URL}/discover/movie?${queryString.stringify(queryStringParams)}`;\r\n        fetch(link)\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    movies: data.results,\r\n                    total_pages: data.total_pages,\r\n                });\r\n                this.props.onChangePagination(page, this.state.total_pages);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.props.filters.sort_by, this.props.page)\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.filters !== this.props.filters) {\r\n            this.getMovies(this.props.filters.sort_by, 1);\r\n            this.props.onChangePagination(1);\r\n        }\r\n\r\n        if (prevProps.page !== this.props.page) {\r\n            this.getMovies(this.props.filters.sort_by, this.props.page);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {movies} = this.state\r\n        return  <Component movies={movies} />\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport Filters from \"./Filters/Filters\";\r\nimport Header from \"./Header/Header\";\r\nimport Cookies from 'universal-cookie';\r\nimport {fetchAPI, API_KEY_3, API_URL} from '../api/api';\r\nimport MovieList from \"./Movies/MovieList/MovieList\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const AppContext = React.createContext()\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            user: null,\r\n            session_id: null,\r\n            filters: {\r\n                sort_by: 'popularity.desc',\r\n                primary_release_year: \"2020\",\r\n                with_genres: []\r\n            },\r\n            page: 1,\r\n            total_pages: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const session_id = cookies.get(\"session_id\", {})\r\n        if (session_id) {\r\n            fetchAPI(`${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`)\r\n                .then(user => {\r\n                    this.getUser(user);\r\n                    this.getSessionId(session_id)\r\n                });\r\n        }\r\n    }\r\n\r\n    getUser = user => {\r\n        this.setState({\r\n            user\r\n        })\r\n    }\r\n\r\n    getSessionId = session_id => {\r\n        cookies.set(\"session_id\", session_id, {\r\n            path: '/',\r\n            maxAge: 3600\r\n        });\r\n        this.setState({\r\n            session_id\r\n        })\r\n    }\r\n\r\n    onLogOut = () => {\r\n        cookies.remove(\"session_id\", {path: \"/\"});\r\n        this.setState({\r\n            session_id: null,\r\n            user: null\r\n        })\r\n    }\r\n\r\n    onChangeFilters = event => {\r\n        const newFilters = {\r\n            ...this.state.filters,\r\n            [event.target.name]: [event.target.value]\r\n        };\r\n\r\n        this.setState({\r\n            filters: newFilters\r\n        });\r\n    }\r\n\r\n    onChangePagination = (page, total_pages = this.state.total_pages) => {\r\n        this.setState({\r\n            page,\r\n            total_pages\r\n        })\r\n    }\r\n\r\n    onChangeGenre = event => {\r\n        const id = event.target.value;\r\n        const {with_genres} = this.state.filters;\r\n        let newGenres = [];\r\n        if (with_genres.includes(id)) {\r\n            newGenres = with_genres.filter(el => el !== id);\r\n        } else {\r\n            newGenres = [...with_genres, id]\r\n        }\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                filters: {\r\n                    ...prevState.filters,\r\n                    with_genres: newGenres\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {filters, page, total_pages, user, session_id} = this.state;\r\n        return (\r\n            <AppContext.Provider value={{\r\n                user,\r\n                session_id,\r\n                getUser: this.getUser,\r\n                getSessionId: this.getSessionId,\r\n                onLogOut: this.onLogOut\r\n            }}>\r\n                <div>\r\n                    <Header user={user}/>\r\n                    <div className=\"container\">\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-9\">\r\n                                <MovieList filters={filters}\r\n                                           page={page}\r\n                                           onChangePagination={this.onChangePagination}/>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <h4>Фильтры</h4>\r\n                                <Filters filters={filters}\r\n                                         onChangeFilters={this.onChangeFilters}\r\n                                         page={page}\r\n                                         total_pages={total_pages}\r\n                                         onChangePagination={this.onChangePagination}\r\n                                         onChangeGenre={this.onChangeGenre}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AppContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./stylesheets/index.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}